{"name":"Ifbyphone-post-call-google analytics","tagline":"PHP Class for pure server-side Google Analytics Measurement Protocol, to allow basic Google Analytics Integration on non-human-readable pages (ie, Javascript-FREE). VERY limited functions: Specifically intended for a broad, automatic capture of post-call data into GA.","body":"### Welcome IfByPhone-Post-Call-Google_Analytics\r\n\r\nThe concept of this class is to provide a Javascript-free and invisible way to register Google Analytics hits and events, without utilizing the analytics.js Javascript API. \r\n\r\n## What is currently the standard?\r\n\r\nThe usual way that Google Analytics is integrated in websites is with the typical GA Javascript code snippets, which are inserted into a page <head> tag (or lower on the page). This consists of essentially two parts, the analytics.js (or the old ga.js) file, and a customized snipped that provides the user's Universal Analytics ID number (ie, UA-XXXXXX-XX). This process of pasting in the Google Analytics Javascript snippet is no doubt quite familiar to any web developer or webmaster. An example of the included script is the below:\r\n\r\n```\r\n<script>\r\n  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\r\n  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\r\n  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\r\n  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\r\n\r\n  ga('create', 'UA-37342357-4', 'auto');\r\n  ga('send', 'pageview');\r\n\r\n</script>\r\n```\r\n\r\n## This is a great system, but breaks down for users under some unique situations:\r\n\r\n1. Users running browsers that are not Javascript enabled (rare) obviously won't be able to run the client-side Javascript.\r\n2. Users who have deliberately disabled Javascript in their security settings are a growing demographic for website users. Often, for security or privacy reasons this is disabled, or simply to forcibly opt-out of advertising.\r\n3. Users working in enterprise environments where the same is done and enforced by corporate IT pros. This can create problems and usability issues, but core business apps are enabled, and ancillary things like this fall by the wayside.\r\n4. Web apps that don't actually display output to a browser (such as a silent webhook, or background process). If nothing is displayed in a browser (where the Javascript runs), no analytics is collected.\r\n5. Similarly, traffic and operations on or between web servers, such as remote fetches, API calls, etc, are effected between servers, which don't load, process, run, or interact with Javascript as a browser client would.\r\n\r\n## These last two scenarios are the purpose of this class\r\n\r\nThe purpose of this class is to utilize the Google Analytics \"Measurement Protocol\" API ([Google Developer Pages](https://developers.google.com/analytics/devguides/collection/protocol/v1/devguide), which allows all the parameters that would be collected via the Javascript API to be specified. Unfortunately, while these would be collected in a purely automated fashion by the Javascript API, using the Measurement Protocol requires these to be manually specified (and of course lacks access to many client-side \r\n\r\n\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at https://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.","google":"UA-37342357-4","note":"Don't delete this file! It's used internally to help with page regeneration."}